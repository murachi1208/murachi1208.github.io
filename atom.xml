<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[OSSっていまさら古いか？ｗ]]></title>
  <link href="http://murachi1208.github.io/atom.xml" rel="self"/>
  <link href="http://murachi1208.github.io/"/>
  <updated>2014-06-10T15:02:49+00:00</updated>
  <id>http://murachi1208.github.io/</id>
  <author>
    <name><![CDATA[murachi1208]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Gistはじめてみました、そしてpukiwikiに]]></title>
    <link href="http://murachi1208.github.io/blog/gist/new-git-pukiwiki/"/>
    <updated>2014-06-09T13:51:27+00:00</updated>
    <id>http://murachi1208.github.io/blog/gist/new-git-pukiwiki</id>
    <content type="html"><![CDATA[<h3>pukiwikiの設定</h3>

<p>plugin フォルダに、「gist.inc.php」ファイルを作成
pukiwiki.ini.php を編集し PKWK_ALLOW_JAVASCRIPT = 1 に設定</p>

<!-- more -->


<h3>pukiwikiにはりつけ</h3>

<p>あとは、貼り付けたいGits のEmbed this gist部分のscript部分をちょいと参考にして</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;script src="https://gist.github.com/makotokw/231844.js"&gt;&lt;/script&gt;
</span><span class='line'>↓
</span><span class='line'>#gist(makotokw/231844);
</span><span class='line'>とするだけ</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vagrant + CentOS6.5 + GitLab Omnibus]]></title>
    <link href="http://murachi1208.github.io/blog/git/gitlab/"/>
    <updated>2014-06-09T13:51:27+00:00</updated>
    <id>http://murachi1208.github.io/blog/git/gitlab</id>
    <content type="html"><![CDATA[<h2>Gitlabって</h2>

<p>GitHubを使用したいがセキュリティの関係とか大人の諸事情（￥）で使えなかったりする場合、GitHubクローンっていうのがあります。その中でも一押しなのが「GitLab」。Omnibus版 を使えばセットアップも簡単だしVagrantだったら…まあそのまま初期運用でも問題なしなのでいつものごとく10分クッキング。</p>

<!-- more -->


<h2>前提条件</h2>

<p>Vagrant もしくは、CentOS6.5 の環境を構築済みであること。あと2014/06/10現在のインストール方法です（Omnibus版は頻繁にアップデートされる）。</p>

<h3>RPM のダウンロードと設定</h3>

<p>Omnibus版でも最新版を使いたいって設定ね。まずchefで必要な情報を設定まで行う。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ curl -o gitlab-6.9.2_omnibus-1.el6.x86_64.rpm https://downloads-packages.s3.amazonaws.com/centos-6.5/gitlab-6.9.2_omnibus.1-1.el6.x86_64.rpm
</span><span class='line'>$ sudo yum install openssh-serve
</span><span class='line'>$ sudo yum install postfix
</span><span class='line'>$ sudo rpm -i gitlab-6.9.2_omnibus-1.el6.x86_64.rpm
</span><span class='line'>$ sudo su gitlab-ctl reconfigure</span></code></pre></td></tr></table></div></figure>


<h3>Nginx の設定</h3>

<p>ディレクトリが既に存在するときもあるけど。、ああ。手順としてね。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% sudo mkdir /etc/gitlab
</span><span class='line'>% sudo vi /etc/gitlab/gitlab.rb</span></code></pre></td></tr></table></div></figure>


<h3>/etc/gitlab/gitlab.rb</h3>

<p>えんじんえっくす、をつかうのだよ。<code>sudo vi /etc/gitlab/gitlab.rb</code> を実行して下記の内容をはりつける。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>external_url "http://localhost"
</span><span class='line'>unicorn["worker_processes"] = 1
</span><span class='line'>postgresql["shared_buffers"] = "128MB"
</span><span class='line'>postgresql["effective_cache_size"] = "32MB"</span></code></pre></td></tr></table></div></figure>


<h3>再設定と起動</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% sudo gitlab-ctl reconfigure
</span><span class='line'>% sudo gitlab-ctl start</span></code></pre></td></tr></table></div></figure>


<h3>アクセス</h3>

<p>Nginx は、80で立ち上がるので Vagrant で port fowrd しておく。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>config.vm.define :web do |web|
</span><span class='line'>    web.vm.network :forwarded_port, guest: 80, host: 9999, host_ip: "127.0.0.1"
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p>上記の設定だと <code>http://localhost:9999</code> とすれば、アクセス可能。</p>

<h3>初期ユーザでログイン</h3>

<p>GitLab の初期アクセス。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>User: admin@local.host
</span><span class='line'>Password: 5iveL!fe</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git の改行でちょっとだけハマったのでメモ]]></title>
    <link href="http://murachi1208.github.io/blog/git/git_config/"/>
    <updated>2014-06-08T04:52:20+00:00</updated>
    <id>http://murachi1208.github.io/blog/git/git_config</id>
    <content type="html"><![CDATA[<h2>git config</h2>

<p>git clone したあと Windowsでファイルを編集後に push したら全行が更新対象になったでござる。まあWindowsとUnixでの改行コードが違うあれで少し困ったってなったのでその解決策です。</p>

<!-- more -->


<p>基本的にUnixがメインとなるので特にこだわりが無ければ改行コードは「LF」にしておきます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git config --global core.autocrlf false</span></code></pre></td></tr></table></div></figure>


<p>で、ok。</p>

<h2>.gitconfig に保存されている</h2>

<p>autocrlf の設定は「.gitconfig」に設定されています。</p>

<p>Windows(msysgit)の場合は、<code>C:\Users\&lt;ユーザ名\.gitconfig</code> に保存され、Unixの場合は、<code>~/.gitconfig</code> に下記の書式で保存されます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[core]
</span><span class='line'>  quotepath = false</span></code></pre></td></tr></table></div></figure>


<p>あといつものお約束コマンドも実行すると。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git config --global user.name 'your name'
</span><span class='line'>$ git config --global user.email you@example.com
</span></code></pre></td></tr></table></div></figure>


<p>下記のように保存されます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[user]
</span><span class='line'>  name = your name
</span><span class='line'>  email = you@example.com
</span><span class='line'>[core]
</span><span class='line'>  quotepath = false
</span><span class='line'>  autoCRLF = false</span></code></pre></td></tr></table></div></figure>


<h3>chefとか使って</h3>

<p>毎回コマンドを打つ（１回でいいんだけどね）のが面倒なのと、仮想環境を作ったり消したりしているとコマンドをついつい忘れてしまうので仮想環境を作ったときに .gitconfig を作成するように <a href="http://tsuchikazu.net/chef_solo_start/">chef-solo</a> など使って作成しておくのがベストです。</p>
]]></content>
  </entry>
  
</feed>
